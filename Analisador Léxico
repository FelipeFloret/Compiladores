#Compiladores
#Aluno:Felipe Floret

import ply.lex as lex

keyword = {
    'class':'CLASS',
    'true':'TRUE',
    'false':'FALSE',
    'not':'NOT',
    'of':'OF',
    'new':'NEW',
    'esac':'ESAC',
    'case':'CASE',
    'isloop':'ISLOOP',
    'isvoid':'ISVOID',
    'let':'LET',
    'pool':'POOL',
    'while':'WHILE',
    'if':'IF',
    'else':'ELSE',
    'then':'THEN',
    'fi':'FI',
    'in':'IN',
    'inherits':'INHERITS',
}
tokens = [
    'ID',
    'NUMERO',
    'COMENTARIO',
    'ABRECHAVES',
    'FECHACHAVES',
    'PONTO',
    'VIRGULA',
    'DOISPONTOS',
    'PONTOVIRGULA',
    'ABREPARENTESES',
    'FECHAPARENTESES',
    'STRING',
    'MULTIPLICA',
    'DIVISAO',
    'MENOR',
    'MENORIGUAL',
    'IGUAL',
    'SETA',
    'MAIS',
    'MENOS',
    'MAIOR',
    'MAIORIGUAL'
    ] + list(keyword.values())

    #Regular expression for tokens
t_ABRECHAVES = r'\{'
t_FECHACHAVES = r'\}'
t_PONTO = r'\.'
t_VIRGULA = r'\,'
t_DOISPONTOS = r'\:'
t_PONTOVIRGULA = r';'
t_ABREPARENTESES = r'\('
t_FECHAPARENTESES = r'\)'
t_MULTIPLICA = r'\*'
t_DIVISAO = r'\/'
t_MENOR = r'\<'
t_MENORIGUAL = r'\<'
t_IGUAL = r'\='
t_SETA = r'\<\='
t_MAIS = r'\+'
t_MENOS = r'\-'
t_MAIOR = r'\>'
t_MAIORIGUAL = r'\>\='

def t_string(t):  # string tokens
   r'".*"'
   return t

def t_COMENTARIO(t): #cancel comments
   r'(\(\*(.|\n)*?\*\))|(--.*)'
   pass


def t_ID(t): #ID tokens
   r'[a-zA-Z_]+([a-zA-Z_0-9]*)'
   t.type = keyword.get(t.value.lower(),'ID')       #Check if it's a keyword
   return t

def t_line(t): #count lines
    r'\n+'
    t.lexer.lineno += len(t.value)

def t_NUMERO(t): #number tokens
    r'\d+'
    t.value = int(t.value)
    return t

def t_error(t): #error message for invalid tokens
    print("Invalid token'%s"% t.value[0])
    t.lexer.skip(1)

t_ignore =' \t'       #ignore spaces and tabs

lexer = lex.lex()

arquive = input("Enter the file for tokenization:\n")
arq = open(arquive,'r')
code = arq.read()
arq.close()

lexer.input(code)

while True:
    getTokens = lexer.token()
    if not getTokens:
        break
    print(getTokens)
